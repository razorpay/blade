// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Native <Checkbox /> Checked should match snapshot when errorText is present 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="activeCheckbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M6 8a2 2 0 012-2h8a2 2 0 012 2v8a2 2 0 01-2 2H8a2 2 0 01-2-2V8zm8.642 2.904a.562.562 0 10-.784-.808l-2.702 2.62-1.014-.983a.563.563 0 00-.784.807l1.407 1.364a.562.562 0 00.783 0l3.094-3z"
              fill={4281041898}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Razorpay
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Array [
            Object {
              "marginBottom": 0,
              "marginLeft": 28,
              "marginRight": 0,
              "marginTop": 0,
            },
          ],
        ]
      }
    >
      <Text
        _isUnderlined={false}
        _letterSpacing="small"
        align="left"
        color="negative.900"
        size="xsmall"
        style={
          Array [
            Object {
              "color": "rgba(209, 45, 45, 1.0)",
              "fontFamily": "Lato-Regular",
              "fontSize": 12,
              "letterSpacing": 0,
              "lineHeight": 18,
              "textAlign": "left",
              "textDecorationLine": "none",
            },
          ]
        }
        testID="ds-text"
        weight="regular"
      >
        You dont have permission
      </Text>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Checked should render component when checked with default props 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M6 8a2 2 0 012-2h8a2 2 0 012 2v8a2 2 0 01-2 2H8a2 2 0 01-2-2V8zm8.642 2.904a.562.562 0 10-.784-.808l-2.702 2.62-1.014-.983a.563.563 0 00-.784.807l1.407 1.364a.562.562 0 00.783 0l3.094-3z"
              fill={4281041898}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Some Title
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Checked snapshot testing when user long presses on checkbox 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="activeCheckbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="rgba(11, 112, 231, 0.10)"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(11, 112, 231, 0.10)",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M6 8a2 2 0 012-2h8a2 2 0 012 2v8a2 2 0 01-2 2H8a2 2 0 01-2-2V8zm8.642 2.904a.562.562 0 10-.784-.808l-2.702 2.62-1.014-.983a.563.563 0 00-.784.807l1.407 1.364a.562.562 0 00.783 0l3.094-3z"
              fill={4281041898}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Razorpay
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Checked snapshot testing when user presses out 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="activeCheckbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M6 8a2 2 0 012-2h8a2 2 0 012 2v8a2 2 0 01-2 2H8a2 2 0 01-2-2V8zm8.642 2.904a.562.562 0 10-.784-.808l-2.702 2.62-1.014-.983a.563.563 0 00-.784.807l1.407 1.364a.562.562 0 00.783 0l3.094-3z"
              fill={4281041898}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Razorpay
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Icon only renders checked icon when other props are passed other than title 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M6 8a2 2 0 012-2h8a2 2 0 012 2v8a2 2 0 01-2 2H8a2 2 0 01-2-2V8zm8.642 2.904a.562.562 0 10-.784-.808l-2.702 2.62-1.014-.983a.563.563 0 00-.784.807l1.407 1.364a.562.562 0 00.783 0l3.094-3z"
              fill={4281041898}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Icon only renders checked icon when to title prop is passed 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M6 8a2 2 0 012-2h8a2 2 0 012 2v8a2 2 0 01-2 2H8a2 2 0 01-2-2V8zm8.642 2.904a.562.562 0 10-.784-.808l-2.702 2.62-1.014-.983a.563.563 0 00-.784.807l1.407 1.364a.562.562 0 00.783 0l3.094-3z"
              fill={4281041898}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Icon only renders unchecked icon when other props are passed other than title 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Icon only renders unchecked icon when to title prop is passed 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Unchecked checkbox should render component when both defaultChecked and checked prop is passed with false values 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Some Title
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Unchecked checkbox should render component when checked prop is passed with value false 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Some Title
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Unchecked checkbox should render component when defaultChecked prop is passed with value false 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Some Title
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Unchecked checkbox should render component when not checked with default props 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Some Title
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Unchecked checkbox should render medium sized Checkbox 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="ds-checkbox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Some Title
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Array [
            Object {
              "marginBottom": 0,
              "marginLeft": 28,
              "marginRight": 0,
              "marginTop": 0,
            },
          ],
        ]
      }
    >
      <Text
        _isUnderlined={false}
        _letterSpacing="small"
        align="left"
        color="shade.950"
        size="xsmall"
        style={
          Array [
            Object {
              "color": "rgba(22, 47, 86, 0.38)",
              "fontFamily": "Lato-Regular",
              "fontSize": 12,
              "letterSpacing": 0,
              "lineHeight": 18,
              "textAlign": "left",
              "textDecorationLine": "none",
            },
          ]
        }
        testID="ds-text"
        weight="regular"
      >
        some Help text
      </Text>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Unchecked checkbox snapshot testing when user long presses on checkbox 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="unselectedCheckBox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="rgba(224, 228, 249, 0.24)"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(224, 228, 249, 0.24)",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Razorpay
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Native <Checkbox /> Unchecked checkbox snapshot testing when user presses out 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <TouchableOpacity
    accessibilityRole="checkbox"
    activeOpacity={1}
    disabled={false}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "flex-start",
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="unselectedCheckBox"
    underlayColor="transparent"
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <View
        backgroundColor="transparent"
        borderRadius="12px"
        height="24px"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 12,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width="24px"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M16 7H8a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8a1 1 0 00-1-1zM8 6a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V8a2 2 0 00-2-2H8z"
              fill={1628843862}
              fillOpacity={0.38}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Array [
              Object {
                "marginBottom": 0,
                "marginLeft": 4,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                Object {
                  "alignSelf": "center",
                  "flexDirection": "column",
                },
              ],
            ],
          ]
        }
      >
        <Text
          _isUnderlined={false}
          _letterSpacing="small"
          align="left"
          color="shade.980"
          size="medium"
          style={
            Array [
              Object {
                "color": "rgba(22, 47, 86, 0.87)",
                "fontFamily": "Lato-Regular",
                "fontSize": 14,
                "letterSpacing": 0,
                "lineHeight": 20,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
            ]
          }
          testID="ds-text"
          weight="regular"
        >
          Razorpay
        </Text>
      </View>
    </View>
  </TouchableOpacity>
</View>
`;
