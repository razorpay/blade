// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Flex /> and <Size /> together plays properly renders child of <Flex />(no styles) and <Size />(no styles) correctly 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {},
          Array [
            Object {
              "flexDirection": "column",
            },
          ],
        ],
      ]
    }
    testID="flex-size-view"
  />
</View>
`;

exports[`<Flex /> and <Size /> together plays properly renders child of <Size />(no styles) and <Flex />(no styles) correctly 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {
            "flexDirection": "column",
          },
          Array [
            Object {},
          ],
        ],
      ]
    }
    testID="size-flex-view"
  />
</View>
`;

exports[`<Flex /> and <Space /> together plays properly renders child of <Flex />(no styles) and <Space />(no styles) correctly 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {},
          Array [
            Object {
              "flexDirection": "column",
            },
          ],
        ],
      ]
    }
    testID="flex-space-view"
  />
</View>
`;

exports[`<Flex /> and <Space /> together plays properly renders child of <Space />(no styles) and <Flex />(no styles) correctly 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {
            "flexDirection": "column",
          },
          Array [
            Object {},
          ],
        ],
      ]
    }
    testID="space-flex-view"
  />
</View>
`;

exports[`<Flex />, <Size />, <Space /> together plays properly renders an inline styled child of <Flex />(no styles) and <Space />(no styles) and <Size />(no styles) correctly 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {},
          Array [
            Object {},
            Array [
              Object {
                "flexDirection": "column",
              },
            ],
          ],
        ],
        Object {
          "backgroundColor": "red",
          "height": 100,
        },
      ]
    }
    testID="flex-space-size-inlineStyledView"
  />
</View>
`;

exports[`<Flex />, <Size />, <Space /> together plays properly renders an inline styled child of <Flex />(with styles) and <Space />(with styles) and <Size />(with styles) correctly 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {
            "height": 50,
            "width": 50,
          },
          Array [
            Object {
              "marginBottom": 1,
              "marginLeft": 1,
              "marginRight": 1,
              "marginTop": 1,
            },
            Array [
              Object {
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ],
          ],
        ],
        Object {
          "backgroundColor": "red",
          "height": 100,
        },
      ]
    }
    testID="styled-flex-space-size-view"
  />
</View>
`;

exports[`<Flex />, <Size />, <Space /> together plays properly renders child of <Flex />(no styles) and <Space />(no styles) and <Size />(no styles) correctly 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {},
          Array [
            Object {},
            Array [
              Object {
                "flexDirection": "column",
              },
            ],
          ],
        ],
      ]
    }
    testID="flex-space-size-view"
  />
</View>
`;

exports[`Renders <Flex /> correctly renders child of <Flex />(no styles) correctly 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {
            "flexDirection": "column",
          },
        ],
      ]
    }
    testID="flex-view"
  />
</View>
`;
