// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BaseButton /> should render button with default properties 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="40px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 40,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="15px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 15,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
</View>
`;

exports[`<BaseButton /> should render button with full width 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={true}
  minHeight="40px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 40,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "100%",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="15px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 15,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
</View>
`;

exports[`<BaseButton /> should render button with icon with default iconPosition 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="40px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 40,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight="20px"
    bbWidth="20px"
    fill="none"
    focusable={false}
    height="20px"
    meetOrSlice={0}
    minX={0}
    minY={0}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        Object {
          "flex": 0,
          "height": 20,
          "width": 20,
        },
      ]
    }
    vbHeight={24}
    vbWidth={24}
    width="20px"
  >
    <RNSVGGroup
      fill={null}
      propList={
        Array [
          "fill",
        ]
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M3 3C1.34315 3 0 4.34315 0 6V18C0 19.6569 1.34314 21 3 21H21C22.6569 21 24 19.6569 24 18V6C24 4.34315 22.6569 3 21 3H3ZM22 9V6C22 5.44771 21.5523 5 21 5H3C2.44772 5 2 5.44772 2 6V9H22ZM2 11H22V18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18V11Z"
        fill={4294967295}
        fillRule={0}
        propList={
          Array [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="15px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 15,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 8,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
</View>
`;

exports[`<BaseButton /> should render button with icon with left iconPosition 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="40px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 40,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight="20px"
    bbWidth="20px"
    fill="none"
    focusable={false}
    height="20px"
    meetOrSlice={0}
    minX={0}
    minY={0}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        Object {
          "flex": 0,
          "height": 20,
          "width": 20,
        },
      ]
    }
    vbHeight={24}
    vbWidth={24}
    width="20px"
  >
    <RNSVGGroup
      fill={null}
      propList={
        Array [
          "fill",
        ]
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M3 3C1.34315 3 0 4.34315 0 6V18C0 19.6569 1.34314 21 3 21H21C22.6569 21 24 19.6569 24 18V6C24 4.34315 22.6569 3 21 3H3ZM22 9V6C22 5.44771 21.5523 5 21 5H3C2.44772 5 2 5.44772 2 6V9H22ZM2 11H22V18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18V11Z"
        fill={4294967295}
        fillRule={0}
        propList={
          Array [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="15px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 15,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 8,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
</View>
`;

exports[`<BaseButton /> should render button with icon with right iconPosition 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="40px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 40,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="15px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 15,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 8,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight="20px"
    bbWidth="20px"
    fill="none"
    focusable={false}
    height="20px"
    meetOrSlice={0}
    minX={0}
    minY={0}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        Object {
          "flex": 0,
          "height": 20,
          "width": 20,
        },
      ]
    }
    vbHeight={24}
    vbWidth={24}
    width="20px"
  >
    <RNSVGGroup
      fill={null}
      propList={
        Array [
          "fill",
        ]
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M3 3C1.34315 3 0 4.34315 0 6V18C0 19.6569 1.34314 21 3 21H21C22.6569 21 24 19.6569 24 18V6C24 4.34315 22.6569 3 21 3H3ZM22 9V6C22 5.44771 21.5523 5 21 5H3C2.44772 5 2 5.44772 2 6V9H22ZM2 11H22V18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18V11Z"
        fill={4294967295}
        fillRule={0}
        propList={
          Array [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
</View>
`;

exports[`<BaseButton /> should render button with icon without text 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="40px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 40,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight="20px"
    bbWidth="20px"
    fill="none"
    focusable={false}
    height="20px"
    meetOrSlice={0}
    minX={0}
    minY={0}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        Object {
          "flex": 0,
          "height": 20,
          "width": 20,
        },
      ]
    }
    vbHeight={24}
    vbWidth={24}
    width="20px"
  >
    <RNSVGGroup
      fill={null}
      propList={
        Array [
          "fill",
        ]
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M3 3C1.34315 3 0 4.34315 0 6V18C0 19.6569 1.34314 21 3 21H21C22.6569 21 24 19.6569 24 18V6C24 4.34315 22.6569 3 21 3H3ZM22 9V6C22 5.44771 21.5523 5 21 5H3C2.44772 5 2 5.44772 2 6V9H22ZM2 11H22V18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18V11Z"
        fill={4294967295}
        fillRule={0}
        propList={
          Array [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
</View>
`;

exports[`<BaseButton /> should render disabled button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  activeBorderColor="hsla(216, 19%, 89%, 1)"
  activeColor="hsla(216, 19%, 89%, 1)"
  borderColor="hsla(216, 19%, 89%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(216, 19%, 89%, 1)"
  focusBorderColor="hsla(216, 19%, 89%, 1)"
  focusColor="hsla(216, 19%, 89%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(216, 19%, 89%, 1)"
  hoverColor="hsla(216, 19%, 89%, 1)"
  isFullWidth={false}
  minHeight="40px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(216, 19%, 89%, 1)",
        "borderColor": "hsla(216, 19%, 89%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "not-allowed",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 40,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(216, 19%, 89%, 1)",
        "borderColor": "hsla(216, 19%, 89%, 1)",
      },
    ]
  }
>
  <Text
    color="hsla(216, 16%, 60%, 1)"
    fontFamily="Lato"
    fontSize="15px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(216, 16%, 60%, 1)",
          "fontFamily": "Lato",
          "fontSize": 15,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
</View>
`;

exports[`<BaseButton /> should render large size button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="48px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 48,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="17px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 17,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
</View>
`;

exports[`<BaseButton /> should render medium size button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="40px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 20px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 40,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="15px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 15,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
</View>
`;

exports[`<BaseButton /> should render small size button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="32px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 12px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 32,
        "paddingBottom": 0,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="12px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 12,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    Pay Now
  </Text>
</View>
`;

exports[`<BaseButton /> should render xsmall size button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  activeBorderColor="hsla(227, 100%, 45%, 1)"
  activeColor="hsla(227, 100%, 45%, 1)"
  borderColor="hsla(213, 89%, 56%, 1)"
  borderRadius="2px"
  borderWidth="1px"
  collapsable={false}
  color="hsla(213, 89%, 56%, 1)"
  focusBorderColor="hsla(223, 95%, 48%, 1)"
  focusColor="hsla(223, 95%, 48%, 1)"
  focusRingColor="hsla(218, 89%, 51%, 0.18)"
  focusable={true}
  hoverBorderColor="hsla(218, 89%, 51%, 1)"
  hoverColor="hsla(218, 89%, 51%, 1)"
  isFullWidth={false}
  minHeight="28px"
  motionDuration="duration.xquick"
  motionEasing="easing.standard.effective"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  spacing="0px 8px"
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
        "borderRadius": 2,
        "borderStyle": "solid",
        "borderWidth": 1,
        "cursor": "pointer",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minHeight": 28,
        "paddingBottom": 0,
        "paddingLeft": 8,
        "paddingRight": 8,
        "paddingTop": 0,
        "width": "auto",
      },
      Object {
        "backgroundColor": "hsla(213, 89%, 56%, 1)",
        "borderColor": "hsla(213, 89%, 56%, 1)",
      },
    ]
  }
>
  <Text
    color="hsla(0, 0%, 100%, 1)"
    fontFamily="Lato"
    fontSize="12px"
    fontStyle="normal"
    fontWeight={700}
    lineHeight="16px"
    style={
      Array [
        Object {
          "color": "hsla(0, 0%, 100%, 1)",
          "fontFamily": "Lato",
          "fontSize": 12,
          "fontStyle": "normal",
          "fontWeight": "700",
          "lineHeight": 16,
          "textAlign": "center",
          "textDecorationLine": "none",
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
        },
      ]
    }
    textAlign="center"
    textDecorationLine="none"
  >
    PAY NOW
  </Text>
</View>
`;
