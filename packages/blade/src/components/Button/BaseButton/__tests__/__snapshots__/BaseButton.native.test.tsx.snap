// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BaseButton /> should render button with default properties 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render button with full width 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={true}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "100%",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render button with icon with default iconPosition 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "paddingRight": 4,
            },
          ]
        }
      >
        <RNSVGSvgView
          accessibilityElementsHidden={true}
          align="xMidYMid"
          bbHeight="16px"
          bbWidth="16px"
          data-blade-component="icon"
          fill="none"
          focusable={false}
          height="16px"
          importantForAccessibility="no-hide-descendants"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              [
                {},
              ],
              {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width="16px"
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M3 3C1.34315 3 0 4.34315 0 6V18C0 19.6569 1.34314 21 3 21H21C22.6569 21 24 19.6569 24 18V6C24 4.34315 22.6569 3 21 3H3ZM22 9V6C22 5.44771 21.5523 5 21 5H3C2.44772 5 2 5.44772 2 6V9H22ZM2 11H22V18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18V11Z"
              fill={4294967295}
              fillRule={0}
              propList={
                [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render button with icon with left iconPosition 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "paddingRight": 4,
            },
          ]
        }
      >
        <RNSVGSvgView
          accessibilityElementsHidden={true}
          align="xMidYMid"
          bbHeight="16px"
          bbWidth="16px"
          data-blade-component="icon"
          fill="none"
          focusable={false}
          height="16px"
          importantForAccessibility="no-hide-descendants"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              [
                {},
              ],
              {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width="16px"
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M3 3C1.34315 3 0 4.34315 0 6V18C0 19.6569 1.34314 21 3 21H21C22.6569 21 24 19.6569 24 18V6C24 4.34315 22.6569 3 21 3H3ZM22 9V6C22 5.44771 21.5523 5 21 5H3C2.44772 5 2 5.44772 2 6V9H22ZM2 11H22V18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18V11Z"
              fill={4294967295}
              fillRule={0}
              propList={
                [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render button with icon with right iconPosition 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "paddingLeft": 4,
            },
          ]
        }
      >
        <RNSVGSvgView
          accessibilityElementsHidden={true}
          align="xMidYMid"
          bbHeight="16px"
          bbWidth="16px"
          data-blade-component="icon"
          fill="none"
          focusable={false}
          height="16px"
          importantForAccessibility="no-hide-descendants"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              [
                {},
              ],
              {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width="16px"
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M3 3C1.34315 3 0 4.34315 0 6V18C0 19.6569 1.34314 21 3 21H21C22.6569 21 24 19.6569 24 18V6C24 4.34315 22.6569 3 21 3H3ZM22 9V6C22 5.44771 21.5523 5 21 5H3C2.44772 5 2 5.44772 2 6V9H22ZM2 11H22V18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18V11Z"
              fill={4294967295}
              fillRule={0}
              propList={
                [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render button with icon without text 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="8px"
    buttonPaddingRight="8px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            },
          ]
        }
      >
        <RNSVGSvgView
          accessibilityElementsHidden={true}
          align="xMidYMid"
          bbHeight="16px"
          bbWidth="16px"
          data-blade-component="icon"
          fill="none"
          focusable={false}
          height="16px"
          importantForAccessibility="no-hide-descendants"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              [
                {},
              ],
              {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width="16px"
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="M3 3C1.34315 3 0 4.34315 0 6V18C0 19.6569 1.34314 21 3 21H21C22.6569 21 24 19.6569 24 18V6C24 4.34315 22.6569 3 21 3H3ZM22 9V6C22 5.44771 21.5523 5 21 5H3C2.44772 5 2 5.44772 2 6V9H22ZM2 11H22V18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18V11Z"
              fill={4294967295}
              fillRule={0}
              propList={
                [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render default color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render default color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(218, 89%, 51%, 0.32)"
    activeBorderColor="hsla(218, 89%, 51%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 0)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(218, 89%, 51%, 0.18)"
    focusBorderColor="hsla(218, 89%, 51%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(218, 89%, 51%, 0.09)"
    hoverBorderColor="hsla(218, 89%, 51%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 0)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 0)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.secondary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(218, 89%, 51%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render default color tertiary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 15%, 54%, 0.32)"
    activeBorderColor="hsla(216, 19%, 89%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    defaultBorderColor="hsla(216, 44%, 23%, 0)"
    focusBackgroundColor="hsla(216, 15%, 54%, 0.32)"
    focusBorderColor="hsla(216, 19%, 89%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 15%, 54%, 0.18)"
    hoverBorderColor="hsla(216, 19%, 89%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 15%, 54%, 0.09)",
          "borderColor": "hsla(216, 44%, 23%, 0)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 15%, 54%, 0.09)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.tertiary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(216, 33%, 29%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 19%, 89%, 1)"
    activeBorderColor="hsla(216, 19%, 89%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 19%, 89%, 1)"
    defaultBorderColor="hsla(216, 19%, 89%, 1)"
    focusBackgroundColor="hsla(216, 19%, 89%, 1)"
    focusBorderColor="hsla(216, 19%, 89%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 19%, 89%, 1)"
    hoverBorderColor="hsla(216, 19%, 89%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 19%, 89%, 1)",
          "borderColor": "hsla(216, 19%, 89%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 19%, 89%, 1)",
          "borderColor": "hsla(216, 19%, 89%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.disabled"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(216, 16%, 60%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled default color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 19%, 89%, 1)"
    activeBorderColor="hsla(216, 19%, 89%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 19%, 89%, 1)"
    defaultBorderColor="hsla(216, 19%, 89%, 1)"
    focusBackgroundColor="hsla(216, 19%, 89%, 1)"
    focusBorderColor="hsla(216, 19%, 89%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 19%, 89%, 1)"
    hoverBorderColor="hsla(216, 19%, 89%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 19%, 89%, 1)",
          "borderColor": "hsla(216, 19%, 89%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 19%, 89%, 1)",
          "borderColor": "hsla(216, 19%, 89%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.disabled"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(216, 16%, 60%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled default color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 44%, 23%, 0)"
    activeBorderColor="hsla(218, 19%, 81%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 44%, 23%, 0)"
    defaultBorderColor="hsla(218, 19%, 81%, 1)"
    focusBackgroundColor="hsla(216, 44%, 23%, 0)"
    focusBorderColor="hsla(218, 19%, 81%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 44%, 23%, 0)"
    hoverBorderColor="hsla(218, 19%, 81%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 44%, 23%, 0)",
          "borderColor": "hsla(218, 19%, 81%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 44%, 23%, 0)",
          "borderColor": "hsla(218, 19%, 81%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.secondary.disabled"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(218, 19%, 81%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled default color tertiary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    activeBorderColor="hsla(216, 19%, 89%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    defaultBorderColor="hsla(216, 19%, 89%, 1)"
    focusBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    focusBorderColor="hsla(216, 19%, 89%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    hoverBorderColor="hsla(216, 19%, 89%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 15%, 54%, 0.09)",
          "borderColor": "hsla(216, 19%, 89%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 15%, 54%, 0.09)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.tertiary.disabled"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(218, 19%, 81%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled information color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(193, 100%, 35%, 1)"
    activeBorderColor="hsla(187, 68%, 52%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(193, 100%, 35%, 1)"
    defaultBorderColor="hsla(187, 68%, 52%, 1)"
    focusBackgroundColor="hsla(193, 100%, 35%, 1)"
    focusBorderColor="hsla(187, 68%, 52%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(193, 100%, 35%, 1)"
    hoverBorderColor="hsla(187, 68%, 52%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(193, 100%, 35%, 1)",
          "borderColor": "hsla(187, 68%, 52%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(193, 100%, 35%, 1)",
          "borderColor": "hsla(187, 68%, 52%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.information.action.text.primary.disabled.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(187, 68%, 52%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled information color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(193, 100%, 35%, 0.09)"
    activeBorderColor="hsla(193, 100%, 35%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(193, 100%, 35%, 0.09)"
    defaultBorderColor="hsla(193, 100%, 35%, 0.32)"
    focusBackgroundColor="hsla(193, 100%, 35%, 0.09)"
    focusBorderColor="hsla(193, 100%, 35%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(193, 100%, 35%, 0.09)"
    hoverBorderColor="hsla(193, 100%, 35%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(193, 100%, 35%, 0.09)",
          "borderColor": "hsla(193, 100%, 35%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(193, 100%, 35%, 0.09)",
          "borderColor": "hsla(193, 100%, 35%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.information.action.text.primary.disabled.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(193, 100%, 35%, 0.32)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled negative color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(8, 73%, 47%, 1)"
    activeBorderColor="hsla(8, 99%, 65%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(8, 73%, 47%, 1)"
    defaultBorderColor="hsla(8, 99%, 65%, 1)"
    focusBackgroundColor="hsla(8, 73%, 47%, 1)"
    focusBorderColor="hsla(8, 99%, 65%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(8, 73%, 47%, 1)"
    hoverBorderColor="hsla(8, 99%, 65%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(8, 73%, 47%, 1)",
          "borderColor": "hsla(8, 99%, 65%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(8, 73%, 47%, 1)",
          "borderColor": "hsla(8, 99%, 65%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.negative.action.text.primary.disabled.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(8, 99%, 65%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled negative color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(9, 91%, 56%, 0.09)"
    activeBorderColor="hsla(9, 91%, 56%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(9, 91%, 56%, 0.09)"
    defaultBorderColor="hsla(9, 91%, 56%, 0.32)"
    focusBackgroundColor="hsla(9, 91%, 56%, 0.09)"
    focusBorderColor="hsla(9, 91%, 56%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(9, 91%, 56%, 0.09)"
    hoverBorderColor="hsla(9, 91%, 56%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(9, 91%, 56%, 0.09)",
          "borderColor": "hsla(9, 91%, 56%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(9, 91%, 56%, 0.09)",
          "borderColor": "hsla(9, 91%, 56%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.negative.action.text.primary.disabled.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(9, 91%, 56%, 0.32)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled neutral color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 33%, 29%, 1)"
    activeBorderColor="hsla(216, 15%, 54%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 33%, 29%, 1)"
    defaultBorderColor="hsla(216, 15%, 54%, 1)"
    focusBackgroundColor="hsla(216, 33%, 29%, 1)"
    focusBorderColor="hsla(216, 15%, 54%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 33%, 29%, 1)"
    hoverBorderColor="hsla(216, 15%, 54%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 33%, 29%, 1)",
          "borderColor": "hsla(216, 15%, 54%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 33%, 29%, 1)",
          "borderColor": "hsla(216, 15%, 54%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.neutral.action.text.primary.disabled.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(216, 15%, 54%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled neutral color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    activeBorderColor="hsla(216, 15%, 54%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    defaultBorderColor="hsla(216, 15%, 54%, 0.32)"
    focusBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    focusBorderColor="hsla(216, 15%, 54%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    hoverBorderColor="hsla(216, 15%, 54%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 15%, 54%, 0.09)",
          "borderColor": "hsla(216, 15%, 54%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 15%, 54%, 0.09)",
          "borderColor": "hsla(216, 15%, 54%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.neutral.action.text.primary.disabled.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(216, 15%, 54%, 0.32)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled notice color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(38, 97%, 38%, 1)"
    activeBorderColor="hsla(35, 84%, 54%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(38, 97%, 38%, 1)"
    defaultBorderColor="hsla(35, 84%, 54%, 1)"
    focusBackgroundColor="hsla(38, 97%, 38%, 1)"
    focusBorderColor="hsla(35, 84%, 54%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(38, 97%, 38%, 1)"
    hoverBorderColor="hsla(35, 84%, 54%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(38, 97%, 38%, 1)",
          "borderColor": "hsla(35, 84%, 54%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(38, 97%, 38%, 1)",
          "borderColor": "hsla(35, 84%, 54%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.notice.action.text.primary.disabled.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(35, 84%, 54%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled notice color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(36, 100%, 44%, 0.09)"
    activeBorderColor="hsla(36, 100%, 44%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(36, 100%, 44%, 0.09)"
    defaultBorderColor="hsla(36, 100%, 44%, 0.32)"
    focusBackgroundColor="hsla(36, 100%, 44%, 0.09)"
    focusBorderColor="hsla(36, 100%, 44%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(36, 100%, 44%, 0.09)"
    hoverBorderColor="hsla(36, 100%, 44%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(36, 100%, 44%, 0.09)",
          "borderColor": "hsla(36, 100%, 44%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(36, 100%, 44%, 0.09)",
          "borderColor": "hsla(36, 100%, 44%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.notice.action.text.primary.disabled.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(36, 100%, 44%, 0.32)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled positive color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(160, 100%, 26%, 1)"
    activeBorderColor="hsla(149, 99%, 35%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(160, 100%, 26%, 1)"
    defaultBorderColor="hsla(149, 99%, 35%, 1)"
    focusBackgroundColor="hsla(160, 100%, 26%, 1)"
    focusBorderColor="hsla(149, 99%, 35%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(160, 100%, 26%, 1)"
    hoverBorderColor="hsla(149, 99%, 35%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(160, 100%, 26%, 1)",
          "borderColor": "hsla(149, 99%, 35%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(160, 100%, 26%, 1)",
          "borderColor": "hsla(149, 99%, 35%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.positive.action.text.primary.disabled.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(149, 99%, 35%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled positive color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(155, 100%, 31%, 0.09)"
    activeBorderColor="hsla(155, 100%, 31%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(155, 100%, 31%, 0.09)"
    defaultBorderColor="hsla(155, 100%, 31%, 0.32)"
    focusBackgroundColor="hsla(155, 100%, 31%, 0.09)"
    focusBorderColor="hsla(155, 100%, 31%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(155, 100%, 31%, 0.09)"
    hoverBorderColor="hsla(155, 100%, 31%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(155, 100%, 31%, 0.09)",
          "borderColor": "hsla(155, 100%, 31%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(155, 100%, 31%, 0.09)",
          "borderColor": "hsla(155, 100%, 31%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.positive.action.text.primary.disabled.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(155, 100%, 31%, 0.32)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled white color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(210, 6%, 94%, 0.18)"
    activeBorderColor="hsla(210, 6%, 94%, 0.18)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(210, 6%, 94%, 0.18)"
    defaultBorderColor="hsla(210, 6%, 94%, 0.18)"
    focusBackgroundColor="hsla(210, 6%, 94%, 0.18)"
    focusBorderColor="hsla(210, 6%, 94%, 0.18)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(210, 6%, 94%, 0.18)"
    hoverBorderColor="hsla(210, 6%, 94%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(210, 6%, 94%, 0.18)",
          "borderColor": "hsla(210, 6%, 94%, 0.18)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(210, 6%, 94%, 0.18)",
          "borderColor": "hsla(210, 6%, 94%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="white.action.text.primary.disabled"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(210, 6%, 94%, 0.32)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled white color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(214, 15%, 18%, 0)"
    activeBorderColor="hsla(210, 6%, 94%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(214, 15%, 18%, 0)"
    defaultBorderColor="hsla(210, 6%, 94%, 0.32)"
    focusBackgroundColor="hsla(214, 15%, 18%, 0)"
    focusBorderColor="hsla(210, 6%, 94%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(214, 15%, 18%, 0)"
    hoverBorderColor="hsla(210, 6%, 94%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(214, 15%, 18%, 0)",
          "borderColor": "hsla(210, 6%, 94%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(214, 15%, 18%, 0)",
          "borderColor": "hsla(210, 6%, 94%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="white.action.text.secondary.disabled"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(210, 6%, 94%, 0.32)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render disabled white color tertiary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(210, 6%, 94%, 0.09)"
    activeBorderColor="hsla(214, 15%, 18%, 0)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(210, 6%, 94%, 0.09)"
    defaultBorderColor="hsla(214, 15%, 18%, 0)"
    focusBackgroundColor="hsla(210, 6%, 94%, 0.09)"
    focusBorderColor="hsla(214, 15%, 18%, 0)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(210, 6%, 94%, 0.09)"
    hoverBorderColor="hsla(214, 15%, 18%, 0)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(210, 6%, 94%, 0.09)",
          "borderColor": "hsla(214, 15%, 18%, 0)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(210, 6%, 94%, 0.09)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="white.action.text.tertiary.disabled"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(210, 6%, 94%, 0.32)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render information color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(196, 100%, 27%, 1)"
    activeBorderColor="hsla(180, 100%, 97%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(193, 100%, 35%, 1)"
    defaultBorderColor="hsla(180, 100%, 97%, 1)"
    focusBackgroundColor="hsla(196, 100%, 27%, 1)"
    focusBorderColor="hsla(180, 100%, 97%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(195, 100%, 31%, 1)"
    hoverBorderColor="hsla(180, 100%, 97%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(193, 100%, 35%, 1)",
          "borderColor": "hsla(180, 100%, 97%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(193, 100%, 35%, 1)",
          "borderColor": "hsla(180, 100%, 97%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.information.action.text.primary.default.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(180, 100%, 97%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render information color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(193, 100%, 35%, 0.32)"
    activeBorderColor="hsla(193, 100%, 35%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(193, 100%, 35%, 0.09)"
    defaultBorderColor="hsla(193, 100%, 35%, 0.32)"
    focusBackgroundColor="hsla(193, 100%, 35%, 0.32)"
    focusBorderColor="hsla(193, 100%, 35%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(193, 100%, 35%, 0.18)"
    hoverBorderColor="hsla(193, 100%, 35%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(193, 100%, 35%, 0.09)",
          "borderColor": "hsla(193, 100%, 35%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(193, 100%, 35%, 0.09)",
          "borderColor": "hsla(193, 100%, 35%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.information.action.text.primary.default.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(195, 100%, 31%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render large size button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="48px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 48,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={200}
        fontWeight="bold"
        lineHeight={200}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 24,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render loading button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 19%, 89%, 1)"
    activeBorderColor="hsla(216, 19%, 89%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 19%, 89%, 1)"
    defaultBorderColor="hsla(216, 19%, 89%, 1)"
    focusBackgroundColor="hsla(216, 19%, 89%, 1)"
    focusBorderColor="hsla(216, 19%, 89%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 19%, 89%, 1)"
    hoverBorderColor="hsla(216, 19%, 89%, 1)"
    isFullWidth={false}
    isLoading={true}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 19%, 89%, 1)",
          "borderColor": "hsla(216, 19%, 89%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 19%, 89%, 1)",
          "borderColor": "hsla(216, 19%, 89%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      bottom="0px"
      data-blade-component="base-box"
      display="flex"
      justifyContent="center"
      left="0px"
      position="absolute"
      right="0px"
      style={
        [
          {
            "alignItems": "center",
            "bottom": 0,
            "display": "flex",
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
      top="0px"
    >
      <View
        data-blade-component="spinner"
        style={
          [
            {},
          ]
        }
      >
        <View
          accessibilityLabel="Loading"
          accessibilityRole="progressbar"
          accessible={true}
          alignItems="center"
          data-blade-component="base-box"
          display="flex"
          flexDirection="row"
          style={
            [
              {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            alignSelf="center"
            data-blade-component="base-box"
            style={
              [
                {
                  "alignSelf": "center",
                },
              ]
            }
          >
            <View
              style={
                {
                  "transform": [
                    {
                      "rotateZ": "0deg",
                    },
                  ],
                }
              }
            >
              <RNSVGSvgView
                accessibilityElementsHidden={true}
                align="xMidYMid"
                bbHeight="20px"
                bbWidth="20px"
                data-blade-component="icon"
                fill="none"
                focusable={false}
                height="20px"
                importantForAccessibility="no-hide-descendants"
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    [
                      {},
                    ],
                    {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width="20px"
              >
                <RNSVGGroup
                  fill={null}
                  propList={
                    [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12Z"
                    fill={4284378759}
                    fillOpacity={0.2}
                    propList={
                      [
                        "fill",
                        "fillOpacity",
                      ]
                    }
                  />
                  <RNSVGPath
                    d="M24 12C24 13.8937 23.5518 15.7606 22.6921 17.4479C21.8324 19.1352 20.5855 20.5951 19.0534 21.7082C17.5214 22.8213 15.7476 23.556 13.8772 23.8523C12.0068 24.1485 10.0928 23.9979 8.29181 23.4127L9.21886 20.5595C10.5696 20.9984 12.0051 21.1114 13.4079 20.8892C14.8107 20.667 16.141 20.116 17.2901 19.2812C18.4391 18.4463 19.3743 17.3514 20.0191 16.0859C20.6639 14.8204 21 13.4203 21 12H24Z"
                    fill={4284378759}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  />
                  <RNSVGPath
                    d="M-1.33514e-05 12C-1.33514e-05 10.1063 0.448176 8.23944 1.30791 6.55211C2.16764 4.86479 3.41451 3.4049 4.94656 2.2918C6.47862 1.17869 8.25236 0.443983 10.1228 0.147739C11.9932 -0.148504 13.9072 0.00212896 15.7082 0.587322L14.7811 3.44049C13.4304 3.0016 11.9949 2.88862 10.5921 3.11081C9.18927 3.33299 7.85896 3.88402 6.70992 4.71885C5.56088 5.55367 4.62573 6.64859 3.98093 7.91409C3.33613 9.17958 2.99999 10.5797 2.99999 12H-1.33514e-05Z"
                    fill={4284378759}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={true}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 0,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.disabled"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(216, 16%, 60%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render medium size button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render negative color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(5, 69%, 32%, 1)"
    activeBorderColor="hsla(0, 100%, 97%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(8, 73%, 47%, 1)"
    defaultBorderColor="hsla(0, 100%, 97%, 1)"
    focusBackgroundColor="hsla(5, 69%, 32%, 1)"
    focusBorderColor="hsla(0, 100%, 97%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(7, 72%, 40%, 1)"
    hoverBorderColor="hsla(0, 100%, 97%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(8, 73%, 47%, 1)",
          "borderColor": "hsla(0, 100%, 97%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(8, 73%, 47%, 1)",
          "borderColor": "hsla(0, 100%, 97%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.negative.action.text.primary.default.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 100%, 97%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render negative color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(9, 91%, 56%, 0.32)"
    activeBorderColor="hsla(9, 91%, 56%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(9, 91%, 56%, 0.09)"
    defaultBorderColor="hsla(9, 91%, 56%, 0.32)"
    focusBackgroundColor="hsla(9, 91%, 56%, 0.32)"
    focusBorderColor="hsla(9, 91%, 56%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(9, 91%, 56%, 0.18)"
    hoverBorderColor="hsla(9, 91%, 56%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(9, 91%, 56%, 0.09)",
          "borderColor": "hsla(9, 91%, 56%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(9, 91%, 56%, 0.09)",
          "borderColor": "hsla(9, 91%, 56%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.negative.action.text.primary.default.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(8, 73%, 47%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render neutral color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(217, 56%, 17%, 1)"
    activeBorderColor="hsla(214, 18%, 69%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 33%, 29%, 1)"
    defaultBorderColor="hsla(214, 18%, 69%, 1)"
    focusBackgroundColor="hsla(217, 56%, 17%, 1)"
    focusBorderColor="hsla(214, 18%, 69%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 44%, 23%, 1)"
    hoverBorderColor="hsla(214, 18%, 69%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 33%, 29%, 1)",
          "borderColor": "hsla(214, 18%, 69%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 33%, 29%, 1)",
          "borderColor": "hsla(214, 18%, 69%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.neutral.action.text.primary.default.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(220, 27%, 98%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render neutral color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 15%, 54%, 0.32)"
    activeBorderColor="hsla(216, 15%, 54%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(216, 15%, 54%, 0.09)"
    defaultBorderColor="hsla(216, 15%, 54%, 0.32)"
    focusBackgroundColor="hsla(216, 15%, 54%, 0.32)"
    focusBorderColor="hsla(216, 15%, 54%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 15%, 54%, 0.18)"
    hoverBorderColor="hsla(216, 15%, 54%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(216, 15%, 54%, 0.09)",
          "borderColor": "hsla(216, 15%, 54%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(216, 15%, 54%, 0.09)",
          "borderColor": "hsla(216, 15%, 54%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.neutral.action.text.primary.default.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(216, 27%, 36%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render notice color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(41, 82%, 26%, 1)"
    activeBorderColor="hsla(32, 100%, 94%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(38, 97%, 38%, 1)"
    defaultBorderColor="hsla(32, 100%, 94%, 1)"
    focusBackgroundColor="hsla(41, 82%, 26%, 1)"
    focusBorderColor="hsla(32, 100%, 94%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(40, 90%, 32%, 1)"
    hoverBorderColor="hsla(32, 100%, 94%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(38, 97%, 38%, 1)",
          "borderColor": "hsla(32, 100%, 94%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(38, 97%, 38%, 1)",
          "borderColor": "hsla(32, 100%, 94%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.notice.action.text.primary.default.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(32, 100%, 94%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render notice color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(36, 100%, 44%, 0.32)"
    activeBorderColor="hsla(36, 100%, 44%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(36, 100%, 44%, 0.09)"
    defaultBorderColor="hsla(36, 100%, 44%, 0.32)"
    focusBackgroundColor="hsla(36, 100%, 44%, 0.32)"
    focusBorderColor="hsla(36, 100%, 44%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(36, 100%, 44%, 0.18)"
    hoverBorderColor="hsla(36, 100%, 44%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(36, 100%, 44%, 0.09)",
          "borderColor": "hsla(36, 100%, 44%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(36, 100%, 44%, 0.09)",
          "borderColor": "hsla(36, 100%, 44%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.notice.action.text.primary.default.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(38, 97%, 38%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render positive color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(164, 100%, 17%, 1)"
    activeBorderColor="hsla(107, 100%, 96%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(160, 100%, 26%, 1)"
    defaultBorderColor="hsla(107, 100%, 96%, 1)"
    focusBackgroundColor="hsla(164, 100%, 17%, 1)"
    focusBorderColor="hsla(107, 100%, 96%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(163, 100%, 22%, 1)"
    hoverBorderColor="hsla(107, 100%, 96%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(160, 100%, 26%, 1)",
          "borderColor": "hsla(107, 100%, 96%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(160, 100%, 26%, 1)",
          "borderColor": "hsla(107, 100%, 96%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.positive.action.text.primary.default.highContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(107, 100%, 96%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render positive color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(155, 100%, 31%, 0.32)"
    activeBorderColor="hsla(155, 100%, 31%, 0.32)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(155, 100%, 31%, 0.09)"
    defaultBorderColor="hsla(155, 100%, 31%, 0.32)"
    focusBackgroundColor="hsla(155, 100%, 31%, 0.32)"
    focusBorderColor="hsla(155, 100%, 31%, 0.32)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(155, 100%, 31%, 0.18)"
    hoverBorderColor="hsla(155, 100%, 31%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(155, 100%, 31%, 0.09)",
          "borderColor": "hsla(155, 100%, 31%, 0.32)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(155, 100%, 31%, 0.09)",
          "borderColor": "hsla(155, 100%, 31%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="feedback.positive.action.text.primary.default.lowContrast"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(160, 100%, 26%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render small size button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="12px"
    buttonPaddingRight="12px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="32px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 32,
          "paddingBottom": 0,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={50}
        fontWeight="bold"
        lineHeight={75}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 11,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 18,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render white color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(216, 4%, 89%, 1)"
    activeBorderColor="hsla(216, 4%, 89%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 1)"
    defaultBorderColor="hsla(0, 0%, 100%, 1)"
    focusBackgroundColor="hsla(216, 4%, 89%, 1)"
    focusBorderColor="hsla(216, 4%, 89%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(216, 6%, 94%, 1)"
    hoverBorderColor="hsla(216, 6%, 94%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 1)",
          "borderColor": "hsla(0, 0%, 100%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 1)",
          "borderColor": "hsla(0, 0%, 100%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="white.action.text.primary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(218, 89%, 51%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render white color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(210, 6%, 94%, 0.32)"
    activeBorderColor="hsla(0, 0%, 100%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(214, 15%, 18%, 0)"
    defaultBorderColor="hsla(0, 0%, 100%, 1)"
    focusBackgroundColor="hsla(210, 6%, 94%, 0.32)"
    focusBorderColor="hsla(0, 0%, 100%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(210, 6%, 94%, 0.18)"
    hoverBorderColor="hsla(0, 0%, 100%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(214, 15%, 18%, 0)",
          "borderColor": "hsla(0, 0%, 100%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(214, 15%, 18%, 0)",
          "borderColor": "hsla(0, 0%, 100%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="white.action.text.secondary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render white color tertiary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(210, 6%, 94%, 0.32)"
    activeBorderColor="hsla(214, 15%, 18%, 0)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(210, 6%, 94%, 0.09)"
    defaultBorderColor="hsla(214, 15%, 18%, 0)"
    focusBackgroundColor="hsla(210, 6%, 94%, 0.32)"
    focusBorderColor="hsla(214, 15%, 18%, 0)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(210, 6%, 94%, 0.18)"
    hoverBorderColor="hsla(214, 15%, 18%, 0)"
    isFullWidth={false}
    isLoading={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(210, 6%, 94%, 0.09)",
          "borderColor": "hsla(214, 15%, 18%, 0)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 36,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(210, 6%, 94%, 0.09)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="white.action.text.tertiary.default"
        data-blade-component="base-text"
        fontSize={100}
        fontWeight="bold"
        lineHeight={100}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        Pay Now
      </Text>
    </View>
  </View>
</View>
`;

exports[`<BaseButton /> should render xsmall size button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    activeBackgroundColor="hsla(230, 100%, 42%, 1)"
    activeBorderColor="hsla(230, 100%, 42%, 1)"
    borderRadius="2px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="8px"
    buttonPaddingRight="8px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(218, 89%, 51%, 1)"
    defaultBorderColor="hsla(218, 89%, 51%, 1)"
    focusBackgroundColor="hsla(227, 100%, 45%, 1)"
    focusBorderColor="hsla(227, 100%, 45%, 1)"
    focusRingColor="hsla(218, 89%, 51%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(223, 95%, 48%, 1)"
    hoverBorderColor="hsla(223, 95%, 48%, 1)"
    isFullWidth={false}
    isLoading={false}
    minHeight="28px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
          "borderRadius": 2,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "justifyContent": "center",
          "minHeight": 28,
          "paddingBottom": 0,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(218, 89%, 51%, 1)",
          "borderColor": "hsla(218, 89%, 51%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      alignItems="center"
      data-blade-component="base-box"
      display="flex"
      flexDirection="row"
      isHidden={false}
      justifyContent="center"
      style={
        [
          {
            "alignItems": "center",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        accessible={true}
        color="action.text.primary.default"
        data-blade-component="base-text"
        fontSize={50}
        fontWeight="bold"
        lineHeight={75}
        style={
          [
            {
              "color": "hsla(0, 0%, 100%, 1)",
              "fontFamily": "Inter",
              "fontSize": 11,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 18,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "center",
              "textDecorationLine": "none",
            },
          ]
        }
        textAlign="center"
      >
        PAY NOW
      </Text>
    </View>
  </View>
</View>
`;
