// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> should render button with default properties 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render button with full width 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={true}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "100%",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render button with icon with default iconPosition 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <View
          alignItems="center"
          data-blade-component="base-box"
          display="flex"
          justifyContent="center"
          style={
            [
              {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
                "paddingRight": 8,
              },
            ]
          }
        >
          <RNSVGSvgView
            accessibilityElementsHidden={true}
            align="xMidYMid"
            bbHeight="16px"
            bbWidth="16px"
            data-blade-component="icon"
            fill="none"
            focusable={false}
            height="16px"
            importantForAccessibility="no-hide-descendants"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                [
                  {},
                ],
                {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width="16px"
          >
            <RNSVGGroup
              fill={null}
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                d="M15.875 14.375C15.3227 14.375 14.875 14.8227 14.875 15.375C14.875 15.9273 15.3227 16.375 15.875 16.375H18.875C19.4273 16.375 19.875 15.9273 19.875 15.375C19.875 14.8227 19.4273 14.375 18.875 14.375H15.875Z"
                fill={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              />
              <RNSVGPath
                d="M10.375 15.375C10.375 14.8227 10.8227 14.375 11.375 14.375H12.5C13.0523 14.375 13.5 14.8227 13.5 15.375C13.5 15.9273 13.0523 16.375 12.5 16.375H11.375C10.8227 16.375 10.375 15.9273 10.375 15.375Z"
                fill={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              />
              <RNSVGPath
                clipRule={0}
                d="M1.75 6C1.75 5.0335 2.5335 4.25 3.5 4.25H21.5C22.4665 4.25 23.25 5.0335 23.25 6V18C23.25 18.9665 22.4665 19.75 21.5 19.75H3.5C2.5335 19.75 1.75 18.9665 1.75 18V6ZM3.75 8.375V6.25H21.25V8.375H3.75ZM21.25 10.375V17.75H3.75V10.375H21.25Z"
                fill={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render button with icon with right iconPosition 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
        <View
          alignItems="center"
          data-blade-component="base-box"
          display="flex"
          justifyContent="center"
          style={
            [
              {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
                "paddingLeft": 8,
              },
            ]
          }
        >
          <RNSVGSvgView
            accessibilityElementsHidden={true}
            align="xMidYMid"
            bbHeight="16px"
            bbWidth="16px"
            data-blade-component="icon"
            fill="none"
            focusable={false}
            height="16px"
            importantForAccessibility="no-hide-descendants"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                [
                  {},
                ],
                {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width="16px"
          >
            <RNSVGGroup
              fill={null}
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                d="M15.875 14.375C15.3227 14.375 14.875 14.8227 14.875 15.375C14.875 15.9273 15.3227 16.375 15.875 16.375H18.875C19.4273 16.375 19.875 15.9273 19.875 15.375C19.875 14.8227 19.4273 14.375 18.875 14.375H15.875Z"
                fill={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              />
              <RNSVGPath
                d="M10.375 15.375C10.375 14.8227 10.8227 14.375 11.375 14.375H12.5C13.0523 14.375 13.5 14.8227 13.5 15.375C13.5 15.9273 13.0523 16.375 12.5 16.375H11.375C10.8227 16.375 10.375 15.9273 10.375 15.375Z"
                fill={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              />
              <RNSVGPath
                clipRule={0}
                d="M1.75 6C1.75 5.0335 2.5335 4.25 3.5 4.25H21.5C22.4665 4.25 23.25 5.0335 23.25 6V18C23.25 18.9665 22.4665 19.75 21.5 19.75H3.5C2.5335 19.75 1.75 18.9665 1.75 18V6ZM3.75 8.375V6.25H21.25V8.375H3.75ZM21.25 10.375V17.75H3.75V10.375H21.25Z"
                fill={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 0.09)"
    defaultBorderColor="hsla(227, 100%, 59%, 0.18)"
    focusBackgroundColor="hsla(227, 100%, 59%, 0.09)"
    focusBorderColor="hsla(227, 100%, 59%, 0.18)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 100%, 59%, 0.09)"
    hoverBorderColor="hsla(227, 100%, 59%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 0.09)",
          "borderColor": "hsla(227, 100%, 59%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 0.09)",
          "borderColor": "hsla(227, 100%, 59%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.primary.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(227, 100%, 59%, 0.18)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled negative color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(4, 74%, 49%, 0.09)"
    defaultBorderColor="hsla(4, 74%, 49%, 0.18)"
    focusBackgroundColor="hsla(4, 74%, 49%, 0.09)"
    focusBorderColor="hsla(4, 74%, 49%, 0.18)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(4, 74%, 49%, 0.09)"
    hoverBorderColor="hsla(4, 74%, 49%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(4, 74%, 49%, 0.09)",
          "borderColor": "hsla(4, 74%, 49%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(4, 74%, 49%, 0.09)",
          "borderColor": "hsla(4, 74%, 49%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.negative.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(4, 74%, 49%, 0.32)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled negative color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(4, 74%, 49%, 0.09)"
    defaultBorderColor="hsla(4, 74%, 49%, 0.18)"
    focusBackgroundColor="hsla(4, 74%, 49%, 0.09)"
    focusBorderColor="hsla(4, 74%, 49%, 0.18)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(4, 74%, 49%, 0.09)"
    hoverBorderColor="hsla(4, 74%, 49%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(4, 74%, 49%, 0.09)",
          "borderColor": "hsla(4, 74%, 49%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(4, 74%, 49%, 0.09)",
          "borderColor": "hsla(4, 74%, 49%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.negative.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(4, 74%, 49%, 0.32)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled positive color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(150, 100%, 32%, 0.09)"
    defaultBorderColor="hsla(150, 100%, 32%, 0.18)"
    focusBackgroundColor="hsla(150, 100%, 32%, 0.09)"
    focusBorderColor="hsla(150, 100%, 32%, 0.18)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(150, 100%, 32%, 0.09)"
    hoverBorderColor="hsla(150, 100%, 32%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(150, 100%, 32%, 0.09)",
          "borderColor": "hsla(150, 100%, 32%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(150, 100%, 32%, 0.09)",
          "borderColor": "hsla(150, 100%, 32%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.positive.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(150, 100%, 32%, 0.32)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled positive color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(150, 100%, 32%, 0.09)"
    defaultBorderColor="hsla(150, 100%, 32%, 0.18)"
    focusBackgroundColor="hsla(150, 100%, 32%, 0.09)"
    focusBorderColor="hsla(150, 100%, 32%, 0.18)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(150, 100%, 32%, 0.09)"
    hoverBorderColor="hsla(150, 100%, 32%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(150, 100%, 32%, 0.09)",
          "borderColor": "hsla(150, 100%, 32%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(150, 100%, 32%, 0.09)",
          "borderColor": "hsla(150, 100%, 32%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.positive.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(150, 100%, 32%, 0.32)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled primary color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 0.09)"
    defaultBorderColor="hsla(227, 100%, 59%, 0.18)"
    focusBackgroundColor="hsla(227, 100%, 59%, 0.09)"
    focusBorderColor="hsla(227, 100%, 59%, 0.18)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 100%, 59%, 0.09)"
    hoverBorderColor="hsla(227, 100%, 59%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 0.09)",
          "borderColor": "hsla(227, 100%, 59%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 0.09)",
          "borderColor": "hsla(227, 100%, 59%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.primary.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(227, 100%, 59%, 0.18)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled primary color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 0)"
    defaultBorderColor="hsla(227, 100%, 59%, 0.18)"
    focusBackgroundColor="hsla(0, 0%, 100%, 0)"
    focusBorderColor="hsla(227, 100%, 59%, 0.18)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(0, 0%, 100%, 0)"
    hoverBorderColor="hsla(227, 100%, 59%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 0)",
          "borderColor": "hsla(227, 100%, 59%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 0)",
          "borderColor": "hsla(227, 100%, 59%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.primary.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(227, 100%, 59%, 0.18)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled primary color tertiary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(211, 20%, 52%, 0.09)"
    defaultBorderColor="hsla(214, 40%, 92%, 1)"
    focusBackgroundColor="hsla(211, 20%, 52%, 0.09)"
    focusBorderColor="hsla(214, 40%, 92%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(211, 20%, 52%, 0.09)"
    hoverBorderColor="hsla(214, 40%, 92%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(211, 20%, 52%, 0.09)",
          "borderColor": "hsla(214, 40%, 92%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(211, 20%, 52%, 0.09)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.gray.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(211, 20%, 52%, 0.32)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled white color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    defaultBorderColor="hsla(0, 0%, 100%, 0.32)"
    focusBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    focusBorderColor="hsla(0, 0%, 100%, 0.32)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    hoverBorderColor="hsla(0, 0%, 100%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 0.18)",
          "borderColor": "hsla(0, 0%, 100%, 0.32)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 0.18)",
          "borderColor": "hsla(0, 0%, 100%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.staticBlack.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 0%, 0.32)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled white color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 0)"
    defaultBorderColor="hsla(0, 0%, 100%, 0.32)"
    focusBackgroundColor="hsla(0, 0%, 100%, 0)"
    focusBorderColor="hsla(0, 0%, 100%, 0.32)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(0, 0%, 100%, 0)"
    hoverBorderColor="hsla(0, 0%, 100%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 0)",
          "borderColor": "hsla(0, 0%, 100%, 0.32)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 0)",
          "borderColor": "hsla(0, 0%, 100%, 0.32)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.staticWhite.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 0.32)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render disabled white color tertiary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    defaultBorderColor="hsla(0, 0%, 100%, 0.18)"
    focusBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    focusBorderColor="hsla(0, 0%, 100%, 0.18)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    hoverBorderColor="hsla(0, 0%, 100%, 0.18)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 0.18)",
          "borderColor": "hsla(0, 0%, 100%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "not-allowed",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.staticWhite.disabled"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 0.32)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render large size button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="48px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 48,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={200}
          fontWeight="medium"
          lineHeight={200}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render medium size button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render negative color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(4, 74%, 49%, 1)"
    defaultBorderColor="hsla(4, 74%, 49%, 1)"
    focusBackgroundColor="hsla(4, 77%, 40%, 1)"
    focusBorderColor="hsla(4, 77%, 40%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(4, 77%, 40%, 1)"
    hoverBorderColor="hsla(4, 77%, 40%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(4, 74%, 49%, 1)",
          "borderColor": "hsla(4, 74%, 49%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(4, 74%, 49%, 1)",
          "borderColor": "hsla(4, 74%, 49%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.staticWhite.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render negative color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(4, 74%, 49%, 0.09)"
    defaultBorderColor="hsla(4, 74%, 49%, 1)"
    focusBackgroundColor="hsla(4, 74%, 49%, 0.18)"
    focusBorderColor="hsla(4, 74%, 49%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(4, 74%, 49%, 0.18)"
    hoverBorderColor="hsla(4, 74%, 49%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(4, 74%, 49%, 0.09)",
          "borderColor": "hsla(4, 74%, 49%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(4, 74%, 49%, 0.09)",
          "borderColor": "hsla(4, 74%, 49%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.negative.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(4, 74%, 49%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render positive color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(150, 100%, 32%, 1)"
    defaultBorderColor="hsla(150, 100%, 32%, 1)"
    focusBackgroundColor="hsla(150, 100%, 27%, 1)"
    focusBorderColor="hsla(150, 100%, 27%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(150, 100%, 27%, 1)"
    hoverBorderColor="hsla(150, 100%, 27%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(150, 100%, 32%, 1)",
          "borderColor": "hsla(150, 100%, 32%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(150, 100%, 32%, 1)",
          "borderColor": "hsla(150, 100%, 32%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.staticWhite.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render positive color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(150, 100%, 32%, 0.09)"
    defaultBorderColor="hsla(150, 100%, 32%, 1)"
    focusBackgroundColor="hsla(150, 100%, 32%, 0.18)"
    focusBorderColor="hsla(150, 100%, 32%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(150, 100%, 32%, 0.18)"
    hoverBorderColor="hsla(150, 100%, 32%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(150, 100%, 32%, 0.09)",
          "borderColor": "hsla(150, 100%, 32%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(150, 100%, 32%, 0.09)",
          "borderColor": "hsla(150, 100%, 32%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.positive.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(150, 100%, 27%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render primary color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render primary color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 0)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 100%, 59%, 0.09)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 100%, 59%, 0.09)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 0)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 0)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.primary.subtle"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(227, 100%, 59%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render primary color tertiary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(211, 20%, 52%, 0.12)"
    defaultBorderColor="hsla(211, 27%, 76%, 1)"
    focusBackgroundColor="hsla(211, 20%, 52%, 0.18)"
    focusBorderColor="hsla(211, 27%, 76%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(211, 20%, 52%, 0.18)"
    hoverBorderColor="hsla(211, 27%, 76%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(211, 20%, 52%, 0.12)",
          "borderColor": "hsla(211, 27%, 76%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(211, 20%, 52%, 0.12)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.gray.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(212, 39%, 16%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render small size button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="12px"
    buttonPaddingRight="12px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="32px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={50}
          fontWeight="medium"
          lineHeight={75}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 11,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render white color primary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 1)"
    defaultBorderColor="hsla(0, 0%, 100%, 1)"
    focusBackgroundColor="hsla(0, 0%, 100%, 0.8)"
    focusBorderColor="hsla(0, 0%, 100%, 0.8)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(0, 0%, 100%, 0.8)"
    hoverBorderColor="hsla(0, 0%, 100%, 0.8)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 1)",
          "borderColor": "hsla(0, 0%, 100%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 1)",
          "borderColor": "hsla(0, 0%, 100%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.staticBlack.muted"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 0%, 0.72)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render white color secondary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="1px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 0)"
    defaultBorderColor="hsla(0, 0%, 100%, 0.8)"
    focusBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    focusBorderColor="hsla(0, 0%, 100%, 0.8)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    hoverBorderColor="hsla(0, 0%, 100%, 0.8)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 0)",
          "borderColor": "hsla(0, 0%, 100%, 0.8)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 1,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 0)",
          "borderColor": "hsla(0, 0%, 100%, 0.8)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.staticWhite.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render white color tertiary button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="20px"
    buttonPaddingRight="20px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(0, 0%, 100%, 0.18)"
    defaultBorderColor="hsla(0, 0%, 100%, 0.18)"
    focusBackgroundColor="hsla(0, 0%, 100%, 0.32)"
    focusBorderColor="hsla(0, 0%, 100%, 0.32)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(0, 0%, 100%, 0.32)"
    hoverBorderColor="hsla(0, 0%, 100%, 0.32)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="36px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(0, 0%, 100%, 0.18)",
          "borderColor": "hsla(0, 0%, 100%, 0.18)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 36,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(0, 0%, 100%, 0.18)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.staticWhite.normal"
          data-blade-component="base-text"
          fontSize={100}
          fontWeight="medium"
          lineHeight={100}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 20,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          Pay Now
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render xsmall size button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    borderRadius="4px"
    borderWidth="0px"
    buttonPaddingBottom="0px"
    buttonPaddingLeft="8px"
    buttonPaddingRight="8px"
    buttonPaddingTop="0px"
    collapsable={false}
    data-blade-component="button"
    defaultBackgroundColor="hsla(227, 100%, 59%, 1)"
    defaultBorderColor="hsla(227, 100%, 59%, 1)"
    focusBackgroundColor="hsla(227, 71%, 51%, 1)"
    focusBorderColor="hsla(227, 100%, 59%, 1)"
    focusRingColor="hsla(227, 100%, 59%, 0.18)"
    focusable={true}
    hoverBackgroundColor="hsla(227, 71%, 51%, 1)"
    hoverBorderColor="hsla(227, 100%, 59%, 1)"
    isFullWidth={false}
    isLoading={false}
    isPressed={false}
    minHeight="28px"
    motionDuration="duration.xquick"
    motionEasing="easing.standard.effective"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    role="button"
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "cursor": "pointer",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 28,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 0,
          "textDecorationColor": "black",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "width": "auto",
        },
        {
          "backgroundColor": "hsla(227, 100%, 59%, 1)",
          "borderColor": "hsla(227, 100%, 59%, 1)",
        },
      ]
    }
    type="button"
  >
    <View
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        alignItems="center"
        data-blade-component="base-box"
        display="flex"
        flexDirection="row"
        isHidden={false}
        justifyContent="center"
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "zIndex": 1,
            },
            {
              "opacity": 1,
            },
          ]
        }
        zIndex={1}
      >
        <Text
          accessible={true}
          color="interactive.text.onPrimary.normal"
          data-blade-component="base-text"
          fontSize={50}
          fontWeight="medium"
          lineHeight={75}
          style={
            [
              {
                "color": "hsla(0, 0%, 100%, 1)",
                "fontFamily": "Inter",
                "fontSize": 11,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
                "textAlign": "center",
                "textDecorationLine": "none",
              },
            ]
          }
          textAlign="center"
        >
          PAY NOW
        </Text>
      </View>
    </View>
  </View>
</View>
`;
