import React from 'react';
import figma from '@figma/code-connect';
import {
  Card,
  CardBody,
  CardFooter,
  CardFooterTrailing,
  CardHeader,
  CardHeaderCounter,
  CardHeaderIcon,
  CardHeaderLeading,
  CardHeaderTrailing,
} from '../Card';

/**
 * -- This file was auto-generated by `figma connect create` --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  Card,
  'https://www.figma.com/design/jubmQL9Z8V7881ayUD95ps/Blade-DSL?node-id=72099-253612&m=dev',
  {
    props: {
      elevation: figma.enum('elevation', {
        None: undefined,
        highRaised: 'highRaised',
        lowRaised: 'lowRaised',
        midRaised: 'midRaised',
      }),
      cardHeader: figma.nestedProps('_Card/Header', {
        title: figma.textContent('title'),
        subtitle: figma.textContent('subtitle'),
      }),
      cardHeaderLeading: figma.nestedProps('_Card/ Leading Item', {
        leadingIcon: figma.instance('leadingIcon'),
      }),
      cardHeaderTrailing: figma.nestedProps('_Card/Trailing Item', {
        trailing: figma.instance('trailing'),
      }),
      cardFooter: figma.nestedProps('_Card/Footer', {
        showDivider: figma.boolean('showDivider'),
      }),
      cardHeaderCounter: figma.nestedProps('Counter', {
        color: figma.enum('color', {
          Primary: 'primary',
          Neutral: 'neutral',
          Information: 'information',
          Notice: 'notice',
          Positive: 'positive',
          Negative: 'negative',
        }),
        count: figma.string('label'),
        emphasis: figma.enum('emphasis', {
          Subtle: 'subtle',
          Intense: 'intense',
        }),
        size: figma.enum('size', {
          Small: 'small',
          Medium: 'medium',
          Large: 'large',
        }),
      }),
    },
    example: ({
      elevation,
      cardHeader,
      cardHeaderLeading,
      cardHeaderCounter,
      cardHeaderTrailing,
      cardFooter,
    }) => (
      <Card elevation={elevation}>
        <CardHeader>
          <CardHeaderLeading
            title={cardHeader.title}
            subtitle={cardHeader.subtitle}
            prefix={<CardHeaderIcon icon={cardHeaderLeading.leadingIcon} />}
            suffix={
              <CardHeaderCounter
                color={cardHeaderCounter.color}
                value={cardHeaderCounter.count}
                emphasis={cardHeaderCounter.emphasis}
                size={cardHeaderCounter.size}
              />
            }
          />
          <CardHeaderTrailing visual={cardHeaderTrailing.trailing} />
        </CardHeader>
        <CardBody>{/* Add card body content here */}</CardBody>
        <CardFooter showDivider={cardFooter.showDivider}>
          <CardFooterTrailing
            actions={{
              primary: {
                /* Add primary action here */
                // text:"Hello"
                // onClick: () => {}
              },
              secondary: {
                /* Add secondary action here */
                // text:"Hello"
                // onClick: () => {}
              },
            }}
          />
        </CardFooter>
      </Card>
    ),
  },
);
