// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Checkbox /> should render checkbox with label 1`] = `
<View
  style={
    Array [
      Object {},
    ]
  }
>
  <View
    accessibilityInvalid={false}
    accessibilityRequired={false}
    accessibilityRole="checkbox"
    accessibilityState={
      Object {
        "checked": false,
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "display": "flex",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      isChecked={false}
      isNegative={false}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "hsla(220, 27%, 98%, 1)",
            "borderColor": "hsla(216, 19%, 89%, 1)",
            "borderRadius": 2,
            "borderStyle": "solid",
            "borderWidth": 1,
            "display": "flex",
            "height": 16,
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 8,
            "marginTop": 3,
            "width": 16,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        color="surface.text.subtle.lowContrast"
        fontFamily="text"
        fontSize={100}
        fontWeight="regular"
        lineHeight="l"
        style={
          Array [
            Object {
              "color": "hsla(216, 27%, 36%, 1)",
              "fontFamily": "Lato",
              "fontSize": 15,
              "fontStyle": "normal",
              "fontWeight": "400",
              "lineHeight": 24,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "left",
              "textDecorationLine": "none",
            },
          ]
        }
      >
        Remember password
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Checkbox /> should set disabled state with isDisabled 1`] = `
<View
  style={
    Array [
      Object {},
    ]
  }
>
  <View
    accessibilityInvalid={false}
    accessibilityRequired={false}
    accessibilityRole="checkbox"
    accessibilityState={
      Object {
        "checked": false,
        "disabled": true,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "display": "flex",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      isChecked={false}
      isDisabled={true}
      isNegative={false}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "hsla(220, 30%, 96%, 1)",
            "borderColor": "hsla(220, 30%, 96%, 1)",
            "borderRadius": 2,
            "borderStyle": "solid",
            "borderWidth": 1,
            "display": "flex",
            "height": 16,
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 8,
            "marginTop": 3,
            "width": 16,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        color="surface.text.placeholder.lowContrast"
        fontFamily="text"
        fontSize={100}
        fontWeight="regular"
        lineHeight="l"
        style={
          Array [
            Object {
              "color": "hsla(214, 18%, 69%, 1)",
              "fontFamily": "Lato",
              "fontSize": 15,
              "fontStyle": "normal",
              "fontWeight": "400",
              "lineHeight": 24,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "left",
              "textDecorationLine": "none",
            },
          ]
        }
      >
        Remember password
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Checkbox /> should set error state with validationState 1`] = `
<View
  style={
    Array [
      Object {},
    ]
  }
>
  <View
    accessibilityErrorMessage="checkbox-19-errortext-21"
    accessibilityInvalid={true}
    accessibilityRequired={false}
    accessibilityRole="checkbox"
    accessibilityState={
      Object {
        "checked": false,
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "display": "flex",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      isChecked={false}
      isNegative={true}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "hsla(9, 91%, 56%, 0.09)",
            "borderColor": "hsla(8, 73%, 47%, 1)",
            "borderRadius": 2,
            "borderStyle": "solid",
            "borderWidth": 1,
            "display": "flex",
            "height": 16,
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 8,
            "marginTop": 3,
            "width": 16,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        color="surface.text.subtle.lowContrast"
        fontFamily="text"
        fontSize={100}
        fontWeight="regular"
        lineHeight="l"
        style={
          Array [
            Object {
              "color": "hsla(216, 27%, 36%, 1)",
              "fontFamily": "Lato",
              "fontSize": 15,
              "fontStyle": "normal",
              "fontWeight": "400",
              "lineHeight": 24,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlign": "left",
              "textDecorationLine": "none",
            },
          ]
        }
      >
        Remember password
      </Text>
    </View>
  </View>
  <View
    marginTop="spacing.1"
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <RNSVGSvgView
      accessibilityElementsHidden={true}
      align="xMidYMid"
      bbHeight="12px"
      bbWidth="12px"
      fill="none"
      focusable={false}
      height="12px"
      importantForAccessibility="no-hide-descendants"
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 12,
            "width": 12,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width="12px"
    >
      <RNSVGGroup
        fill={null}
        propList={
          Array [
            "fill",
          ]
        }
      >
        <RNSVGPath
          d="M12 11C12.5523 11 13 11.4477 13 12V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V12C11 11.4477 11.4477 11 12 11Z"
          fill={4291770400}
          propList={
            Array [
              "fill",
            ]
          }
        />
        <RNSVGPath
          d="M12 7C11.4477 7 11 7.44772 11 8C11 8.55228 11.4477 9 12 9H12.01C12.5623 9 13.01 8.55228 13.01 8C13.01 7.44772 12.5623 7 12.01 7H12Z"
          fill={4291770400}
          propList={
            Array [
              "fill",
            ]
          }
        />
        <RNSVGPath
          clipRule={0}
          d="M1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12ZM12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3Z"
          fill={4291770400}
          fillRule={0}
          propList={
            Array [
              "fill",
              "fillRule",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <View
      marginRight="spacing.1"
      style={
        Array [
          Object {
            "marginRight": 4,
          },
        ]
      }
    />
    <Text
      color="feedback.text.negative.lowContrast"
      fontFamily="text"
      fontSize={50}
      fontStyle="italic"
      lineHeight="s"
      style={
        Array [
          Object {
            "color": "hsla(8, 73%, 47%, 1)",
            "fontFamily": "Lato",
            "fontSize": 11,
            "fontStyle": "italic",
            "fontWeight": "400",
            "lineHeight": 16,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "textAlign": "left",
            "textDecorationLine": "none",
          },
        ]
      }
    >
      This has to be checked
    </Text>
  </View>
</View>
`;
