TODO:
- Setup typescript
- Generate tokens
- Add Changeset










packages
  tokens
    color
    typography
    layout
    sizes
    spacing
  theme
    light
      colors
      typography
    dark
      colors
      typography   
    theme-provider
    useTheme hook
    index.ts
      re-export all the themes
      re-export provider
      re-export theme hooks
  components
    Button
      Button.web.ts
      Button.native.ts
      tokens.ts
      index.ts
      package.json
  tools
    figma plugins
  types
    TS types
  utils
    all the utilities we use inside DS might also be used by the client
  docs
scripts



Goals of publishing
- individual components for iterative adoption
- group based on modules so we can publish groups individually
- DS as whole
- publish TS types
- rollup for web and bob for native maybe?
- Named vs default exports?
- different ways to import
  import { Provider, defaultTheme, Button, List, isDefined } from '@razorpay/blade';
  import { Provider, defaultTheme } from '@razorpay/blade/theme';
  import { Button } from '@razorpay/blade/Button';
  
  import { List } from '@razorpay/blade/components/List';
  or
  import { List } from '@razorpay/blade/List';

  import {reactChildrenGroupByDisplayName, isDefined, isEmpty} from @razorpay/blade/utils

Roughly package names
@razorpay/blade
@razorpay/blade/theme
@razorpay/blade/Button
@razorpay/blade/List
@razorpay/blade/types
@razorpay/blade/utils